@model Safe_Places.Models.Archive

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}





<div class="orange-container" style="height:60px;">
    <p class="large-white-text">Fill in the report</p>
</div>
<br /><br />
<p style="text-align :center; font-size:large">
    Help us keep up with data of Safe Place Scheme usage.<br />
    Please fill out this form each time a vulnerable person needs assistance.
</p>



<fieldset class="lightorange-container">
    <br />

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.Archive_Date, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Archive_Date, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Archive_Date, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Employee_name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Employee_name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Employee_name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Situation, htmlAttributes: new { @class = "control-label col-md-2" })
                @{
                    List<SelectListItem> listItemsSituation = new List<SelectListItem>();
                    listItemsSituation.Add(new SelectListItem
                    {
                        Text = "Lost",
                        Value = "Lost",
                        Selected = true
                    });
                    listItemsSituation.Add(new SelectListItem
                    {
                        Text = "In Pain",
                        Value = "In Pain"
                    });
                    listItemsSituation.Add(new SelectListItem
                    {
                        Text = "Distressed",
                        Value = "Distressed"
                    });
                    listItemsSituation.Add(new SelectListItem
                    {
                        Text = "Chat",
                        Value = "Chat"
                    });
                    listItemsSituation.Add(new SelectListItem
                    {
                        Text = "missed Transport",
                        Value = "missed Transport"
                    });
                    listItemsSituation.Add(new SelectListItem
                    {
                        Text = "Other",
                        Value = "Other"
                    });




                }
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Situation, listItemsSituation, "-- Select Status --", new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Situation, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.If_other, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.If_other, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.If_other, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Resolved, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Resolved, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Resolved, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Critical, htmlAttributes: new { @class = "control-label col-md-2" })
                    @{
                        List<SelectListItem> listItemsCrit = new List<SelectListItem>();
                        listItemsCrit.Add(new SelectListItem
                        {
                            Text = "Critical",
                            Value = "Critical"
                        });
                        listItemsCrit.Add(new SelectListItem
                        {
                            Text = "Non-Critical",
                            Value = "Non-Critical",
                            Selected = true
                        });

                    }
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Critical, listItemsCrit, "-- Select Status --", new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Critical, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Details, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Details, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Details, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
            }
    </fieldset>
    <div>
        @Html.ActionLink("View Archives", "Index")
    </div>
